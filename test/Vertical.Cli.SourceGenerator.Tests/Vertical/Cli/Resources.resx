<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="ProgramCSharpCode" xml:space="preserve">
        <value>using System;
using System.Threading.Tasks;
 
namespace Vertical.Cli
{
    namespace Configuration
    {
        public interface IRootCommandBuilder&lt;TModel, TResult&gt;
        {
        }
    }
    
    public interface IRootCommand&lt;TModel, TResult&gt;
    {
    }

    public static class RootCommand
    {
        public static IRootCommand&lt;TModel, TResult&gt; Create&lt;TModel, TResult&gt;(
            string id,
            Action&lt;Configuration.IRootCommandBuilder&lt;TModel, TResult&gt;&gt; configure) =&gt; null!;
    }
}

namespace TestSetup
{
    public enum Compression { None, GZip }

    public record FileCopyParameters(
        FileInfo Source,
        FileInfo Dest,
        Compression Compression,
        bool Overwrite);

    public static class Program
    {
        public static System.Threading.Tasks.Task&lt;int&gt; Main(string[] args)
        {
            _ = Vertical.Cli.RootCommand.Create&lt;FileCopyParameters, Task&lt;int&gt;&gt;(
                id: "copy",
                root =&gt; { });

            return Task.FromResult(0);
        }
    }
}</value>
    </data>
    <data name="ProgramUnit" xml:space="preserve">
        <value>using System;
using Vertical.Cli;

namespace TestSetup
{    
    public enum Compression { None, GZip }

    public record FileCopyParameters(
        FileInfo Source,
        FileInfo Dest,
        Compression Compression,
        bool Overwrite);

    public static class Program
    {
        public static Task&lt;int&gt; Main(string[] args)
        {
            _ = RootCommand.Create&lt;FileCopyParameters, Task&lt;int&gt;&gt;(
                id: "copy",
                root =&gt; { });

            return Task.FromResult(0);
        }
    }
}</value>
    </data>
</root>